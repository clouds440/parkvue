{"ast":null,"code":"import{Mail,Notifications}from'@mui/icons-material';import{Avatar,Badge,Box,IconButton,Tooltip}from'@mui/material';import React,{useState}from'react';import{useValue}from'../../context/ContextProvider';// import useCheckToken from '../../hooks/useCheckToken';\nimport UserMenu from'../UserMenu';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const UserIcons=()=>{var _currentUser$name;// useCheckToken();\nconst{state:{currentUser}}=useValue();const[anchorUserMenu,setAnchorUserMenu]=useState(null);return/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(IconButton,{size:\"large\",color:\"inherit\",children:/*#__PURE__*/_jsx(Badge,{color:\"error\",badgeContent:5,children:/*#__PURE__*/_jsx(Mail,{})})}),/*#__PURE__*/_jsx(IconButton,{size:\"large\",color:\"inherit\",children:/*#__PURE__*/_jsx(Badge,{color:\"error\",badgeContent:20,children:/*#__PURE__*/_jsx(Notifications,{})})}),/*#__PURE__*/_jsx(Tooltip,{title:\"Open User Settings\",children:/*#__PURE__*/_jsx(IconButton,{onClick:e=>setAnchorUserMenu(e.currentTarget),children:/*#__PURE__*/_jsx(Avatar,{src:currentUser===null||currentUser===void 0?void 0:currentUser.photoURL,alt:currentUser===null||currentUser===void 0?void 0:currentUser.name,children:currentUser===null||currentUser===void 0?void 0:(_currentUser$name=currentUser.name)===null||_currentUser$name===void 0?void 0:_currentUser$name.charAt(0).toUpperCase()})})}),/*#__PURE__*/_jsx(UserMenu,{anchorUserMenu,setAnchorUserMenu})]});};export default UserIcons;","map":{"version":3,"names":["Mail","Notifications","Avatar","Badge","Box","IconButton","Tooltip","React","useState","useValue","UserMenu","jsx","_jsx","jsxs","_jsxs","UserIcons","_currentUser$name","state","currentUser","anchorUserMenu","setAnchorUserMenu","children","size","color","badgeContent","title","onClick","e","currentTarget","src","photoURL","alt","name","charAt","toUpperCase"],"sources":["C:/Users/cooki/OneDrive - CUNY/Desktop/parkvue2.0/parkvue/Client/src/Components/User/UserIcons.js"],"sourcesContent":["import { Mail, Notifications } from '@mui/icons-material';\r\nimport { Avatar, Badge, Box, IconButton, Tooltip } from '@mui/material';\r\nimport React, { useState } from 'react';\r\nimport { useValue } from '../../context/ContextProvider';\r\n// import useCheckToken from '../../hooks/useCheckToken';\r\nimport UserMenu from '../UserMenu';\r\n\r\nconst UserIcons = () => {\r\n    // useCheckToken();\r\n    const{\r\n        state:{currentUser},\r\n    }=useValue();\r\n\r\n    const [anchorUserMenu, setAnchorUserMenu] = useState(null);\r\n\r\n    return (\r\n        <Box>\r\n            <IconButton size=\"large\" color=\"inherit\">\r\n                {/*Badge: error to be read as a notification; content {5 messages}*/}\r\n                <Badge color=\"error\" badgeContent={5}>\r\n                    {/*Icon*/}\r\n                    <Mail />\r\n                </Badge>\r\n            </IconButton>\r\n\r\n            <IconButton size=\"large\" color=\"inherit\">\r\n                {/*Badge: error to be read as a notification; content {20 request}*/}\r\n                <Badge color=\"error\" badgeContent={20}>\r\n                    {/*Icon*/}\r\n                    <Notifications />\r\n                </Badge>\r\n            </IconButton>\r\n\r\n      <Tooltip title=\"Open User Settings\">\r\n            {/*Icon*/}\r\n            <IconButton onClick={(e) => setAnchorUserMenu(e.currentTarget)}>\r\n                {/*Avatar = source is the current user to photo URL*/}\r\n                {/*Question not to trigger*/}\r\n                <Avatar src={ currentUser?.photoURL} alt={currentUser?.name}>\r\n                    {/*charAt function: If no photo url attached then will display the users first name initial extracted by char at*/}\r\n                    {currentUser?.name?.charAt(0).toUpperCase()}\r\n                </Avatar>\r\n            </IconButton>\r\n      </Tooltip>\r\n            <UserMenu {...{anchorUserMenu, setAnchorUserMenu}} />\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default UserIcons;"],"mappings":"AAAA,OAASA,IAAI,CAAEC,aAAa,KAAQ,qBAAqB,CACzD,OAASC,MAAM,CAAEC,KAAK,CAAEC,GAAG,CAAEC,UAAU,CAAEC,OAAO,KAAQ,eAAe,CACvE,MAAO,CAAAC,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,QAAQ,KAAQ,+BAA+B,CACxD;AACA,MAAO,CAAAC,QAAQ,KAAM,aAAa,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAEnC,KAAM,CAAAC,SAAS,CAAGA,CAAA,GAAM,KAAAC,iBAAA,CACpB;AACA,KAAK,CACDC,KAAK,CAAC,CAACC,WAAW,CACtB,CAAC,CAACT,QAAQ,CAAC,CAAC,CAEZ,KAAM,CAACU,cAAc,CAAEC,iBAAiB,CAAC,CAAGZ,QAAQ,CAAC,IAAI,CAAC,CAE1D,mBACIM,KAAA,CAACV,GAAG,EAAAiB,QAAA,eACAT,IAAA,CAACP,UAAU,EAACiB,IAAI,CAAC,OAAO,CAACC,KAAK,CAAC,SAAS,CAAAF,QAAA,cAEpCT,IAAA,CAACT,KAAK,EAACoB,KAAK,CAAC,OAAO,CAACC,YAAY,CAAE,CAAE,CAAAH,QAAA,cAEjCT,IAAA,CAACZ,IAAI,GAAE,CAAC,CACL,CAAC,CACA,CAAC,cAEbY,IAAA,CAACP,UAAU,EAACiB,IAAI,CAAC,OAAO,CAACC,KAAK,CAAC,SAAS,CAAAF,QAAA,cAEpCT,IAAA,CAACT,KAAK,EAACoB,KAAK,CAAC,OAAO,CAACC,YAAY,CAAE,EAAG,CAAAH,QAAA,cAElCT,IAAA,CAACX,aAAa,GAAE,CAAC,CACd,CAAC,CACA,CAAC,cAEnBW,IAAA,CAACN,OAAO,EAACmB,KAAK,CAAC,oBAAoB,CAAAJ,QAAA,cAE7BT,IAAA,CAACP,UAAU,EAACqB,OAAO,CAAGC,CAAC,EAAKP,iBAAiB,CAACO,CAAC,CAACC,aAAa,CAAE,CAAAP,QAAA,cAG3DT,IAAA,CAACV,MAAM,EAAC2B,GAAG,CAAGX,WAAW,SAAXA,WAAW,iBAAXA,WAAW,CAAEY,QAAS,CAACC,GAAG,CAAEb,WAAW,SAAXA,WAAW,iBAAXA,WAAW,CAAEc,IAAK,CAAAX,QAAA,CAEvDH,WAAW,SAAXA,WAAW,kBAAAF,iBAAA,CAAXE,WAAW,CAAEc,IAAI,UAAAhB,iBAAA,iBAAjBA,iBAAA,CAAmBiB,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CACvC,CAAC,CACD,CAAC,CACV,CAAC,cACJtB,IAAA,CAACF,QAAQ,EAAMS,cAAc,CAAEC,iBAAiB,CAAI,CAAC,EACpD,CAAC,CAEd,CAAC,CAED,cAAe,CAAAL,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}