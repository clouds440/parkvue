{"ast":null,"code":"//Context provider switches between the looked user and the looked out user (User exist versus not)\nimport{createContext,useContext,useReducer}from'react';import reducer from'./reducer';//Engine state: Initial state contains all our public values\nimport{jsx as _jsx}from\"react/jsx-runtime\";const initialState={currentUser:null};//when initial state is passed\nconst Context=/*#__PURE__*/createContext(initialState);//Hook to extract the values of the context easily\nexport const useValue=()=>{return useContext(Context);};//context provider\nconst ContextProvider=_ref=>{let{children}=_ref;//extract state and then dispatch from use reducer\nconst[state,dispatch]=useReducer(reducer,initialState);return/*#__PURE__*/ (// Current state and the dispatcher of that state inside the values => Reducer\n_jsx(Context.Provider,{value:{state,dispatch},children:children}));};export default ContextProvider;","map":{"version":3,"names":["createContext","useContext","useReducer","reducer","jsx","_jsx","initialState","currentUser","Context","useValue","ContextProvider","_ref","children","state","dispatch","Provider","value"],"sources":["C:/Users/cooki/OneDrive - CUNY/Desktop/parkvue2.0/parkvue/Client/src/context/ContextProvider.js"],"sourcesContent":["//Context provider switches between the looked user and the looked out user (User exist versus not)\r\nimport {createContext, useContext, useReducer } from 'react';\r\nimport reducer from './reducer';\r\n\r\n//Engine state: Initial state contains all our public values\r\nconst initialState = {\r\n    currentUser: null,\r\n};\r\n\r\n//when initial state is passed\r\nconst Context = createContext(initialState); //Hook to extract the values of the context easily\r\n\r\nexport const useValue = () => {\r\n    return useContext(Context);\r\n};\r\n\r\n//context provider\r\nconst ContextProvider = ({ children }) => { //extract state and then dispatch from use reducer\r\n    const [state, dispatch] = useReducer(reducer, initialState);\r\n    return (\r\n        // Current state and the dispatcher of that state inside the values => Reducer\r\n         <Context.Provider value = {{state, dispatch}}\r\n         >\r\n            {/*Now all variables inside the state will be available to all components wrapped by this provider*/}\r\n            {children}\r\n        </Context.Provider>\r\n    );\r\n}\r\n\r\nexport default ContextProvider;"],"mappings":"AAAA;AACA,OAAQA,aAAa,CAAEC,UAAU,CAAEC,UAAU,KAAQ,OAAO,CAC5D,MAAO,CAAAC,OAAO,KAAM,WAAW,CAE/B;AAAA,OAAAC,GAAA,IAAAC,IAAA,yBACA,KAAM,CAAAC,YAAY,CAAG,CACjBC,WAAW,CAAE,IACjB,CAAC,CAED;AACA,KAAM,CAAAC,OAAO,cAAGR,aAAa,CAACM,YAAY,CAAC,CAAE;AAE7C,MAAO,MAAM,CAAAG,QAAQ,CAAGA,CAAA,GAAM,CAC1B,MAAO,CAAAR,UAAU,CAACO,OAAO,CAAC,CAC9B,CAAC,CAED;AACA,KAAM,CAAAE,eAAe,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAAO;AACxC,KAAM,CAACE,KAAK,CAAEC,QAAQ,CAAC,CAAGZ,UAAU,CAACC,OAAO,CAAEG,YAAY,CAAC,CAC3D,oBACI;AACCD,IAAA,CAACG,OAAO,CAACO,QAAQ,EAACC,KAAK,CAAI,CAACH,KAAK,CAAEC,QAAQ,CAAE,CAAAF,QAAA,CAGzCA,QAAQ,CACK,CAAC,EAE3B,CAAC,CAED,cAAe,CAAAF,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}